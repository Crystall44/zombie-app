(function(){"use strict";var t={985:function(t,i,s){var e=s(5130),n=s(6768),a=s(4232);const o={class:"simulation-container"},h={ref:"canvas",width:"800",height:"600",class:"simulation-canvas"},r={class:"controls-panel"},l={class:"buttons-container"},c={key:0,class:"simulation-end"},d={class:"end-icon"},u={key:0},m={key:1},g={class:"end-content"},p={key:0,class:"outcome-message"},f={key:1,class:"outcome-message"},k={key:2,class:"outcome-message"},b={class:"time-stats"},x={key:1,class:"settings-panel"},M={class:"setting-item"},v={class:"setting-label-with-icon"},y={key:0,class:"mini-settings-panel"},P={class:"mini-setting-item"},T={class:"mini-setting-item"},L={class:"mini-setting-item"},S={class:"setting-item"},w={class:"setting-label-with-icon"},R={key:0,class:"mini-settings-panel"},C={class:"mini-setting-item"},I={class:"mini-setting-item"},z={class:"mini-setting-item"},E={class:"mini-setting-item"},H={class:"mini-setting-item"},_={class:"mini-setting-item"},Z={class:"setting-item"},W={class:"setting-label-with-icon"},J={key:0,class:"mini-settings-panel"},G={class:"mini-setting-item"},U={class:"mini-setting-item"},V={class:"mini-setting-item"},B={class:"mini-setting-item"},O={class:"setting-item"},F={class:"setting-label-with-icon"},X={key:0,class:"mini-settings-panel"},N={class:"mini-settings-item"},$={class:"mini-settings-item"},Q={class:"mini-settings-item"},j={class:"mini-settings-item"},A={class:"mini-settings-item"},q={class:"mini-settings-item"},D={class:"settings-button"},K={key:2,class:"stats"},Y={class:"stat-item"},tt={class:"stat-value"},it={class:"stat-item"},st={class:"stat-value"},et={class:"stat-item"},nt={class:"stat-value"},at={class:"stat-item"},ot={class:"stat-value"},ht={class:"stat-item"},rt={class:"stat-value"},lt={class:"stat-item"},ct={class:"stat-value"};function dt(t,i,s,dt,ut,mt){return(0,n.uX)(),(0,n.CE)("div",o,[(0,n.Lk)("canvas",h,null,512),(0,n.Lk)("div",r,[(0,n.Lk)("div",l,[ut.simulationEnd?(0,n.Q3)("",!0):((0,n.uX)(),(0,n.CE)("button",{key:0,onClick:i[0]||(i[0]=(...t)=>mt.handleControlClick&&mt.handleControlClick(...t)),class:(0,a.C4)(["control-button",{"stop-button":ut.isRunning,"continue-button":ut.isPaused&&!ut.simulationEnd,"start-button":!ut.isRunning&&!ut.isPaused}])},(0,a.v_)(mt.mainButtonText),3)),ut.isPaused||ut.simulationEnd?((0,n.uX)(),(0,n.CE)("button",{key:1,onClick:i[1]||(i[1]=(...t)=>mt.resetSim&&mt.resetSim(...t)),class:"reset-button"},"Начать заново")):(0,n.Q3)("",!0)]),ut.simulationEnd?((0,n.uX)(),(0,n.CE)("div",c,[(0,n.Lk)("div",{class:(0,a.C4)(["end-card",{win:0===ut.zombies.length,loss:ut.zombies.length>0}])},[(0,n.Lk)("div",d,[0===ut.zombies.length?((0,n.uX)(),(0,n.CE)("span",u,"🎉")):((0,n.uX)(),(0,n.CE)("span",m,"☠️"))]),(0,n.Lk)("div",g,[(0,n.Lk)("h3",null,(0,a.v_)(0===ut.zombies.length?"Победа!":"Симуляция завершена"),1),0===ut.zombies.length?((0,n.uX)(),(0,n.CE)("p",p,[i[32]||(i[32]=(0,n.eW)(" Все зомби уничтожены!")),i[33]||(i[33]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("small",null,"Выжившие: "+(0,a.v_)(ut.stats.healthy)+" человек, "+(0,a.v_)(ut.stats.medics)+" медиков, "+(0,a.v_)(ut.stats.guardians)+" защитников.",1)])):0===ut.humans.length&&0===ut.medics.length&&0===ut.guardians.length?((0,n.uX)(),(0,n.CE)("p",f,[i[34]||(i[34]=(0,n.eW)(" Зомби апокалипсис наступил!")),i[35]||(i[35]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("small",null,"Все люди превратились в "+(0,a.v_)(ut.stats.zombies)+" зомби.",1)])):0===ut.humans.length&&0===ut.medics.length&&ut.guardians.length>0?((0,n.uX)(),(0,n.CE)("p",k,[i[36]||(i[36]=(0,n.eW)(" Защитники устояли")),i[37]||(i[37]=(0,n.Lk)("br",null,null,-1)),(0,n.Lk)("small",null,"Но все мирные жители погибли (осталось "+(0,a.v_)(ut.stats.guardians)+" защитников).",1)])):(0,n.Q3)("",!0),(0,n.Lk)("div",b,[i[38]||(i[38]=(0,n.Lk)("span",{class:"time-icon"},"⏱️",-1)),(0,n.eW)(" Время симуляции: "+(0,a.v_)(ut.stats.time),1)])])],2)])):(0,n.Q3)("",!0),ut.simulationStarted?(0,n.Q3)("",!0):((0,n.uX)(),(0,n.CE)("div",x,[(0,n.Lk)("div",M,[(0,n.Lk)("div",v,[(0,n.Lk)("label",null,"Количество людей: "+(0,a.v_)(ut.settings.population),1),(0,n.Lk)("button",{onClick:i[2]||(i[2]=t=>ut.showHumanSettings=!ut.showHumanSettings),class:"settings-icon-button",title:"Настройки"},"⚙️")]),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[3]||(i[3]=t=>ut.settings.population=t),min:"1",max:"300",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.population,void 0,{number:!0}]]),ut.showHumanSettings?((0,n.uX)(),(0,n.CE)("div",y,[(0,n.Lk)("div",P,[(0,n.Lk)("label",null,"Скорость людей: "+(0,a.v_)(ut.settings.humanSpeed.toFixed(1)),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[4]||(i[4]=t=>ut.settings.humanSpeed=t),min:"0.1",max:"5",step:"0.1",class:"slider"},null,512),[[e.Jo,ut.settings.humanSpeed,void 0,{number:!0}]])]),(0,n.Lk)("div",T,[(0,n.Lk)("label",null,"Время превращения (сек): "+(0,a.v_)((ut.settings.infectionTime/1e3).toFixed(1)),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[5]||(i[5]=t=>ut.settings.infectionTime=t),min:"100",max:"10000",step:"100",class:"slider"},null,512),[[e.Jo,ut.settings.infectionTime,void 0,{number:!0}]])]),(0,n.Lk)("div",L,[(0,n.Lk)("label",null,"Дальность видимости: "+(0,a.v_)(ut.settings.detectionRadiusHumans),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[6]||(i[6]=t=>ut.settings.detectionRadiusHumans=t),min:"25",max:"300",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.detectionRadiusHumans,void 0,{number:!0}]])])])):(0,n.Q3)("",!0)]),(0,n.Lk)("div",S,[(0,n.Lk)("div",w,[(0,n.Lk)("label",null,"Количество зомби: "+(0,a.v_)(ut.settings.zombiePopulation),1),(0,n.Lk)("button",{onClick:i[7]||(i[7]=t=>ut.showZombieSettings=!ut.showZombieSettings),class:"settings-icon-button",title:"Настройки"},"⚙️")]),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[8]||(i[8]=t=>ut.settings.zombiePopulation=t),min:"1",max:"50",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.zombiePopulation,void 0,{number:!0}]]),ut.showZombieSettings?((0,n.uX)(),(0,n.CE)("div",R,[(0,n.Lk)("div",C,[(0,n.Lk)("label",null,"Скорость зомби: "+(0,a.v_)(ut.settings.zombieSpeed),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[9]||(i[9]=t=>ut.settings.zombieSpeed=t),min:"0.1",max:"5",step:"0.1",class:"slider"},null,512),[[e.Jo,ut.settings.zombieSpeed,void 0,{number:!0}]])]),(0,n.Lk)("div",I,[(0,n.Lk)("label",null,"Радиус заражения: "+(0,a.v_)(ut.settings.infectionRadius),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[10]||(i[10]=t=>ut.settings.infectionRadius=t),min:"5",max:"100",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.infectionRadius,void 0,{number:!0}]])]),(0,n.Lk)("div",z,[(0,n.Lk)("label",null,"Дальность видимости: "+(0,a.v_)(ut.settings.detectionRadiusZombie),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[11]||(i[11]=t=>ut.settings.detectionRadiusZombie=t),min:"25",max:"300",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.detectionRadiusZombie,void 0,{number:!0}]])]),(0,n.Lk)("div",E,[(0,n.Lk)("label",null,"Здоровье зомби: "+(0,a.v_)(ut.settings.maxHealthZombie),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[12]||(i[12]=t=>ut.settings.maxHealthZombie=t),min:"1",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.maxHealthZombie,void 0,{number:!0}]])]),(0,n.Lk)("div",H,[(0,n.Lk)("label",null,"Сила аттаки: "+(0,a.v_)(ut.settings.attackPowerZombie),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[13]||(i[13]=t=>ut.settings.attackPowerZombie=t),min:"1",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.attackPowerZombie,void 0,{number:!0}]])]),(0,n.Lk)("div",_,[(0,n.Lk)("label",null,"Задержка между аттаками: "+(0,a.v_)((ut.settings.attackRateZombie/60).toFixed(1)),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[14]||(i[14]=t=>ut.settings.attackRateZombie=t),min:"30",max:"600",step:"30",class:"slider"},null,512),[[e.Jo,ut.settings.attackRateZombie,void 0,{number:!0}]])])])):(0,n.Q3)("",!0)]),(0,n.Lk)("div",Z,[(0,n.Lk)("div",W,[(0,n.Lk)("label",null,"Количество медиков: "+(0,a.v_)(ut.settings.medicsPopulation),1),(0,n.Lk)("button",{onClick:i[15]||(i[15]=t=>ut.showMedicSettings=!ut.showMedicSettings),class:"settings-icon-button",title:"Настройки"},"⚙️")]),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[16]||(i[16]=t=>ut.settings.medicsPopulation=t),min:"0",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.medicsPopulation,void 0,{number:!0}]]),ut.showMedicSettings?((0,n.uX)(),(0,n.CE)("div",J,[(0,n.Lk)("div",G,[(0,n.Lk)("label",null,"Скорость медиков: "+(0,a.v_)(ut.settings.medicSpeed),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[17]||(i[17]=t=>ut.settings.medicSpeed=t),min:"0.1",max:"5",step:"0.1",class:"slider"},null,512),[[e.Jo,ut.settings.medicSpeed,void 0,{number:!0}]])]),(0,n.Lk)("div",U,[(0,n.Lk)("label",null,"Скорость лечения: "+(0,a.v_)(ut.settings.healingPower),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[18]||(i[18]=t=>ut.settings.healingPower=t),min:"0.5",max:"20",step:"0.5",class:"slider"},null,512),[[e.Jo,ut.settings.healingPower,void 0,{number:!0}]])]),(0,n.Lk)("div",V,[(0,n.Lk)("label",null,"Дальность видимости: "+(0,a.v_)(ut.settings.detectionRadiusMedic),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[19]||(i[19]=t=>ut.settings.detectionRadiusMedic=t),min:"25",max:"300",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.detectionRadiusMedic,void 0,{number:!0}]])]),(0,n.Lk)("div",B,[(0,n.Lk)("label",null,"Время превращения в зомби(сек): "+(0,a.v_)((ut.settings.infectionTimeMedic/1e3).toFixed(1)),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[20]||(i[20]=t=>ut.settings.infectionTimeMedic=t),min:"100",max:"10000",step:"100",class:"slider"},null,512),[[e.Jo,ut.settings.infectionTimeMedic,void 0,{number:!0}]])])])):(0,n.Q3)("",!0)]),(0,n.Lk)("div",O,[(0,n.Lk)("div",F,[(0,n.Lk)("label",null,"Количество защитников: "+(0,a.v_)(ut.settings.guardiansPopulation),1),(0,n.Lk)("button",{onClick:i[21]||(i[21]=t=>ut.showGuardianSettings=!ut.showGuardianSettings),class:"settings-icon-button",title:"Настройки"},"⚙️")]),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[22]||(i[22]=t=>ut.settings.guardiansPopulation=t),min:"0",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.guardiansPopulation,void 0,{number:!0}]]),ut.showGuardianSettings?((0,n.uX)(),(0,n.CE)("div",X,[(0,n.Lk)("div",N,[(0,n.Lk)("label",null,"Скорость защитников: "+(0,a.v_)(ut.settings.guardianSpeed),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[23]||(i[23]=t=>ut.settings.guardianSpeed=t),min:"0.1",max:"5",step:"0.1",class:"slider"},null,512),[[e.Jo,ut.settings.guardianSpeed,void 0,{number:!0}]])]),(0,n.Lk)("div",$,[(0,n.Lk)("label",null,"Дальность видимости: "+(0,a.v_)(ut.settings.detectionRadiusGuardian),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[24]||(i[24]=t=>ut.settings.detectionRadiusGuardian=t),min:"25",max:"300",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.detectionRadiusGuardian,void 0,{number:!0}]])]),(0,n.Lk)("div",Q,[(0,n.Lk)("label",null,"Дальность аттаки: "+(0,a.v_)(ut.settings.attackRadiusGuardian),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[25]||(i[25]=t=>ut.settings.attackRadiusGuardian=t),min:"5",max:"100",step:"5",class:"slider"},null,512),[[e.Jo,ut.settings.attackRadiusGuardian,void 0,{number:!0}]])]),(0,n.Lk)("div",j,[(0,n.Lk)("label",null,"Сила аттаки: "+(0,a.v_)(ut.settings.attackPowerGuardian),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[26]||(i[26]=t=>ut.settings.attackPowerGuardian=t),min:"1",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.attackPowerGuardian,void 0,{number:!0}]])]),(0,n.Lk)("div",A,[(0,n.Lk)("label",null,"Задержка между аттаками: "+(0,a.v_)((ut.settings.attackRateGuardian/60).toFixed(1)),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[27]||(i[27]=t=>ut.settings.attackRateGuardian=t),min:"30",max:"600",step:"30",class:"slider"},null,512),[[e.Jo,ut.settings.attackRateGuardian,void 0,{number:!0}]])]),(0,n.Lk)("div",q,[(0,n.Lk)("label",null,"Здоровье защитника: "+(0,a.v_)(ut.settings.maxHealthGuardian),1),(0,n.bo)((0,n.Lk)("input",{type:"range","onUpdate:modelValue":i[28]||(i[28]=t=>ut.settings.maxHealthGuardian=t),min:"1",max:"25",step:"1",class:"slider"},null,512),[[e.Jo,ut.settings.maxHealthGuardian,void 0,{number:!0}]])])])):(0,n.Q3)("",!0)]),(0,n.Lk)("div",D,[(0,n.Lk)("button",{onClick:i[29]||(i[29]=(...t)=>mt.saveSettings&&mt.saveSettings(...t)),class:"settings-control-button"},"Сохранить"),(0,n.Lk)("button",{onClick:i[30]||(i[30]=(...t)=>mt.cancelSettings&&mt.cancelSettings(...t)),class:"settings-cancel-button"},"Отменить"),(0,n.Lk)("button",{onClick:i[31]||(i[31]=(...t)=>mt.resetSettings&&mt.resetSettings(...t)),class:"settings-reset-button"},"Сбросить")])])),ut.simulationStarted||ut.isRunning?((0,n.uX)(),(0,n.CE)("div",K,[(0,n.Lk)("div",Y,[i[39]||(i[39]=(0,n.Lk)("span",{class:"stat-label"},"Здоровые:",-1)),(0,n.Lk)("span",tt,(0,a.v_)(ut.stats.healthy),1)]),(0,n.Lk)("div",it,[i[40]||(i[40]=(0,n.Lk)("span",{class:"stat-label"},"Зараженные:",-1)),(0,n.Lk)("span",st,(0,a.v_)(ut.stats.infected),1)]),(0,n.Lk)("div",et,[i[41]||(i[41]=(0,n.Lk)("span",{class:"stat-label"},"Зомби:",-1)),(0,n.Lk)("span",nt,(0,a.v_)(ut.stats.zombies),1)]),(0,n.Lk)("div",at,[i[42]||(i[42]=(0,n.Lk)("span",{class:"stat-label"},"Медики:",-1)),(0,n.Lk)("span",ot,(0,a.v_)(ut.stats.medics),1)]),(0,n.Lk)("div",ht,[i[43]||(i[43]=(0,n.Lk)("span",{class:"stat-label"},"Защитники:",-1)),(0,n.Lk)("span",rt,(0,a.v_)(ut.stats.guardians),1)]),(0,n.Lk)("div",lt,[i[44]||(i[44]=(0,n.Lk)("span",{class:"stat-label"},"Время:",-1)),(0,n.Lk)("span",ct,(0,a.v_)(ut.stats.time),1)])])):(0,n.Q3)("",!0)])])}s(4114),s(8111),s(2489),s(7588),s(3579),s(8237);class ut{constructor(t,i,s=.9,e=20,n=150,a=5,o=1,h=60){this.x=t||700*Math.random()+50,this.y=i||500*Math.random()+50,this.radius=7,this.direction=Math.random()*Math.PI*2,this.speed=s,this.detectionRadius=n,this.infectionRadius=e,this.color="hsl(0, 100%, 30%)",this.currentTarget=null,this.targetLockTimer=0,this.walkCucle=0,this.walkangle=0,this.maxHealth=a,this.health=a,this.attackPower=o,this.attackCooldown=0,this.attackRate=h}move(t,i,s){if(this.currentTarget&&this.targetLockTimer>0&&0===this.currentTarget.infectionProgress){this.targetLockTimer--;const t=this.distanceTo(this.currentTarget),i=(0===this.currentTarget.infectionProgress||this.currentTarget.health>0)&&t<this.detectionRadius;if(i)return void(void 0!==this.currentTarget.health&&t<this.infectionRadius?this.attack(this.currentTarget):void 0!==this.currentTarget.infectionProgress&&this.chase(this.currentTarget))}const e=[...t.filter(t=>0===t.infectionProgress),...i.filter(t=>0===t.infectionProgress),...s.filter(t=>t.health>0)],n=this.findClosestHuman(e);n&&this.isHumanNear(n)?(this.currentTarget=n,this.targetLockTimer=100,void 0!==n.health&&this.distanceTo(n)<this.infectionRadius?this.attack(n):this.chase(n)):(this.randomWalk(),this.currentTarget=null),this.attackCooldown>0&&this.attackCooldown--}isHumanNear(t){return this.distanceTo(t)<this.detectionRadius}chase(t){const i=10,s=t.x+Math.cos(t.direction)*i,e=t.y+Math.sin(t.direction)*i;this.direction=Math.atan2(e-this.y,s-this.x),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.applyBoundaries()}attack(t){this.attackCooldown<=0&&void 0!==t.health&&(t.health-=this.attackPower,this.attackCooldown=this.attackRate,t.health<=0&&(this.currentTarget=null))}randomWalk(){this.walkCucle<=0&&(this.walkangle=Math.random()*Math.PI*2,this.walkCucle=50+50*Math.random()),this.walkCucle--;const t=this.walkangle-this.direction;this.direction+=.05*t;const i=this.speed*(.3+.2*Math.random());this.x+=Math.cos(this.direction)*i,this.y+=Math.sin(this.direction)*i,(this.x<=10||this.x>=790)&&(this.walkangle=Math.PI-this.direction,this.walkCucle=30),(this.y<=10||this.y>=590)&&(this.walkangle=-this.direction,this.walkCucle=30),this.applyBoundaries()}applyBoundaries(){this.x=Math.max(10,Math.min(790,this.x)),this.y=Math.max(10,Math.min(590,this.y))}findClosestHuman(t){return 0===t.length?null:t.reduce((t,i)=>{const s=this.distanceTo(i);return s<t.dist?{human:i,dist:s}:t},{human:null,dist:1/0}).human}distanceTo(t){return Math.hypot(this.x-t.x,this.y-t.y)}}class mt{constructor(t,i,s=1,e=3e3,n=100){this.x=t,this.y=i,this.radius=5,this.speed=s,this.infected=!1,this.color="hsl(25, 60%, 70%)",this.detectionRadius=n,this.panicMode=!1,this.infectionProgress=0,this.infectionTime=e,this.direction=Math.random()*Math.PI*2,this.panicTimer=0,this.lastThreatPos=null,this.isHealing=!1}move(t,i){if(this.isHealing)return;if(this.infectionProgress>0)return void this.moveInfected(i);const s=this.findClosestZombie(t);if(s&&this.isZombieNear(s))this.runFrom(s),this.panicMode=!0;else{if(this.panicTimer>0)return this.panicTimer--,this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,void this.applyBoundaries();this.randomWalk(),this.panicMode=!1}}isZombieNear(t){return this.distanceTo(t)<this.detectionRadius}runFrom(t){const i=Math.atan2(this.y-t.y,this.x-t.x);this.direction=i+(Math.random()-.5)*(Math.PI/3),this.avoidWalls(20),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.applyBoundaries(),this.lastThreatPos={x:t.x,y:t.y},this.panicTimer=60}randomWalk(){(Math.random()<.005||!this.direction)&&(this.direction=Math.random()*Math.PI*2),this.direction+=.15*(Math.random()-.5),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.avoidWalls(5),this.applyBoundaries()}moveInfected(t){if(this.infectionProgress>0&&this.infectionProgress<100){const i=t.filter(t=>0===t.infectionProgress),s=this.findClosestMedic(i);if(s&&!s.panicMode){const t=this.distanceTo(s);if(t<2*this.detectionRadius){const t=Math.atan2(s.y-this.y,s.x-this.x);return this.direction=t+.1*(Math.random()-.5),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,void this.applyBoundaries()}}this.randomWalk()}}findClosestMedic(t){if(0===t.length)return null;let i=null,s=1/0;for(const e of t){const t=this.distanceTo(e);t<s&&(s=t,i=e)}return i}applyBoundaries(){this.x=Math.max(10,Math.min(790,this.x)),this.y=Math.max(10,Math.min(590,this.y))}avoidWalls(t){const i=this.x+Math.cos(this.direction)*t,s=this.y+Math.sin(this.direction)*t;i<10||i>790?this.panicMode?this.direction=s<this.y?-Math.PI/2:Math.PI/2:this.direction=Math.atan2(Math.sin(this.direction),-Math.cos(this.direction)):(s<10||s>590)&&(this.panicMode?this.direction=i<this.x?Math.PI:0:this.direction=Math.atan2(-Math.sin(this.direction),Math.cos(this.direction)))}findClosestZombie(t){if(0===t.length)return null;let i=null,s=1/0;for(const e of t){const t=this.distanceTo(e);t<s&&(s=t,i=e)}return i}updateInfection(t){this.infectionProgress>0&&(this.infectionProgress+=t/this.infectionTime*100,this.color=`hsl(${25-25*this.infectionProgress/100}, ${60+40*this.infectionProgress/100}%, ${70-40*this.infectionProgress/100}%)`)}isTooClose(t,i,s){return Math.hypot(this.x-t,this.y-i)<s}distanceTo(t){return Math.hypot(this.x-t.x,this.y-t.y)}}class gt{constructor(t,i,s=1.2,e=2,n=150,a=6e3){this.x=t||700*Math.random()+50,this.y=i||500*Math.random()+50,this.speed=s,this.healingPower=e,this.detectionRadius=n,this.infectionTime=a,this.radius=6,this.color="hsl(165, 80%, 60%)",this.currentTarget=null,this.direction=Math.random()*Math.PI*2,this.infectionProgress=0,this.isHealing=!1,this.panicMode=!1,this.panicTimer=0,this.lastThreatPos=null}move(t,i,s){if(this.infectionProgress>0)return void this.moveInfected(s);const e=this.findClosestZombie(i);if(e&&this.isZombieNear(e))return this.runFrom(e),this.panicMode=!0,this.panicTimer=60,void(this.currentTarget&&(this.currentTarget.isHealing=!1,this.currentTarget=null,this.isHealing=!1));if(this.panicTimer>0)return this.panicTimer--,this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,void this.applyBoundaries();this.panicMode=!1;const n=t.filter(t=>t.infectionProgress>0&&t.infectionProgress<100),a=s.filter(t=>t.infectionProgress>0&&t.infectionProgress<100),o=this.findClosestInfected([...n,...a]);o?(this.distanceTo(o)<this.detectionRadius?(this.currentTarget=o,this.goTo(this.currentTarget)):this.randomWalk(),this.distanceTo(o)<this.radius+o.radius+3?(this.isHealing=!0,this.heal(o)):(this.isHealing=!1,this.currentTarget&&(this.currentTarget.isHealing=!1))):(this.isHealing=!1,this.currentTarget&&(this.currentTarget.isHealing=!1,this.currentTarget=null),this.randomWalk())}isZombieNear(t){return Math.hypot(this.x-t.x,this.y-t.y)<this.detectionRadius}heal(t){t.infectionProgress=Math.max(0,t.infectionProgress-this.healingPower),t.isHealing=!0,0===t.infectionProgress&&(t.infected=!1,t.isHealing=!1,this.currentTarget&&(this.currentTarget=null))}goTo(t){const i=Math.atan2(t.y-this.y,t.x-this.x);if("undefined"===typeof this.direction)this.direction=i;else{const t=(i-this.direction+Math.PI)%(2*Math.PI)-Math.PI;this.direction+=.3*t}this.direction+=.02*(Math.random()-.5);const s=this.distanceTo(t),e=s<50?this.speed*(s/50)*.8:this.speed;this.x+=Math.cos(this.direction)*e,this.y+=Math.sin(this.direction)*e,this.avoidWalls(20),this.applyBoundaries()}runFrom(t){const i=Math.atan2(this.y-t.y,this.x-t.x);this.direction=i+(Math.random()-.5)*(Math.PI/3),this.avoidWalls(20),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.applyBoundaries(),this.lastThreatPos={x:t.x,y:t.y},this.panicTimer=60}randomWalk(){(Math.random()<.005||!this.direction)&&(this.direction=Math.random()*Math.PI*2),this.direction+=.15*(Math.random()-.5),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.avoidWalls(5),this.applyBoundaries()}applyBoundaries(){this.x=Math.max(10,Math.min(790,this.x)),this.y=Math.max(10,Math.min(590,this.y))}avoidWalls(t){const i=this.x+Math.cos(this.direction)*t,s=this.y+Math.sin(this.direction)*t;i<10||i>790?this.panicMode?this.direction=s<this.y?-Math.PI/2:Math.PI/2:this.direction=Math.atan2(Math.sin(this.direction),-Math.cos(this.direction)):(s<10||s>590)&&(this.panicMode?this.direction=i<this.x?Math.PI:0:this.direction=Math.atan2(-Math.sin(this.direction),Math.cos(this.direction)))}findClosestEntity(t){if(0===t.length)return null;let i=null,s=1/0;for(const e of t){const t=this.distanceTo(e);t<s&&(s=t,i=e)}return i}findClosestInfected(t){return this.findClosestEntity(t)}findClosestZombie(t){return this.findClosestEntity(t)}distanceTo(t){return Math.hypot(this.x-t.x,this.y-t.y)}updateInfection(t){this.infectionProgress>0&&(this.infectionProgress+=t/this.infectionTime*100,this.color=`hsl(${165-165*this.infectionProgress/100}, ${80+20*this.infectionProgress/100}%, ${60-30*this.infectionProgress/100}%)`)}findClosestMedic(t){return this.findClosestEntity(t)}moveInfected(t){if(this.infectionProgress>0&&this.infectionProgress<100){const i=t.filter(t=>0===t.infectionProgress),s=this.findClosestMedic(i);if(s&&!s.panicMode){const t=this.distanceTo(s);if(t<2*this.detectionRadius){const t=Math.atan2(s.y-this.y,s.x-this.x);return this.direction=t+.1*(Math.random()-.5),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,void this.applyBoundaries()}}this.randomWalk()}}}class pt{constructor(t,i,s=.6,e=100,n=50,a=1,o=60,h=3){this.x=t||700*Math.random()+50,this.y=i||500*Math.random()+50,this.detectionRadius=e,this.speed=s,this.radius=7,this.color="hsl(225, 85%, 40%)",this.direction=Math.random()*Math.PI*2,this.currentTarget=null,this.attackPower=a,this.attackCooldown=0,this.attackRate=o,this.attackRadius=n,this.maxHealth=h,this.health=h}move(t){if((!this.currentTarget||this.currentTarget.health<=0)&&(this.currentTarget=this.findClosestZombie(t.filter(t=>t.health>0))),this.currentTarget){const t=this.distanceTo(this.currentTarget);t<this.attackRadius?this.attack(this.currentTarget):t<this.detectionRadius?this.chase(this.currentTarget):(this.currentTarget=null,this.randomWalk())}else this.randomWalk();this.attackCooldown>0&&this.attackCooldown--,this.applyBoundaries()}attack(t){this.attackCooldown<=0&&(t.health-=this.attackPower,this.attackCooldown=this.attackRate,t.health<=0&&(this.currentTarget=null))}chase(t){this.direction=Math.atan2(t.y-this.y,t.x-this.x),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.applyBoundaries()}randomWalk(){(Math.random()<.005||!this.direction)&&(this.direction=Math.random()*Math.PI*2),this.direction+=.15*(Math.random()-.5),this.x+=Math.cos(this.direction)*this.speed,this.y+=Math.sin(this.direction)*this.speed,this.avoidWalls(5),this.applyBoundaries()}findClosestZombie(t){if(0===t.length)return null;let i=null,s=1/0;for(const e of t){const t=this.distanceTo(e);t<s&&(s=t,i=e)}return i}distanceTo(t){return Math.hypot(this.x-t.x,this.y-t.y)}applyBoundaries(){this.x=Math.max(10,Math.min(790,this.x)),this.y=Math.max(10,Math.min(590,this.y))}avoidWalls(t){const i=this.x+Math.cos(this.direction)*t,s=this.y+Math.sin(this.direction)*t;i<10||i>790?this.direction=Math.atan2(Math.sin(this.direction),-Math.cos(this.direction)):(s<10||s>590)&&(this.direction=Math.atan2(-Math.sin(this.direction),Math.cos(this.direction)))}}var ft={data(){const t={population:100,humanSpeed:1,zombieSpeed:.9,detectionRadiusHumans:100,infectionRadius:25,infectionTime:3e3,zombiePopulation:1,medicSpeed:1.2,healingPower:2,detectionRadiusMedic:150,infectionTimeMedic:6e3,guardianSpeed:.6,detectionRadiusGuardian:100,attackRadiusGuardian:50,medicsPopulation:5,guardiansPopulation:5,detectionRadiusZombie:150,maxHealthZombie:5,attackPowerZombie:1,attackRateZombie:60,attackPowerGuardian:1,attackRateGuardian:60,maxHealthGuardian:3};return{humans:[],zombies:[],medics:[],guardians:[],ctx:null,animationId:null,showHumanSettings:!1,showZombieSettings:!1,showMedicSettings:!1,showGuardianSettings:!1,startTime:0,elapsedTime:0,pauseTime:0,lastPauseTime:0,lastTime:0,stats:{healthy:0,infected:0,zombies:0,medics:0,guardians:0,time:"00:00"},simulationEnd:!1,minDist:100,isRunning:!1,isPaused:!1,simulationStarted:!1,showSettings:!0,tempSettings:null,settings:JSON.parse(JSON.stringify(t)),defaultSettings:t,frameSkip:0}},mounted(){this.initWorld()},computed:{mainButtonText(){return this.simulationEnd?"Начать заново":this.isPaused?"Продолжить":this.isRunning?"Остановить":"Начать симуляцию"}},methods:{handleControlClick(){this.isRunning?(this.stopSim(),this.isRunning=!1,this.isPaused=!0):(this.startSim(),this.isRunning=!0,this.isPaused=!1)},initWorld(){this.ctx=this.$refs.canvas.getContext("2d"),this.humans=[],this.zombies=[],this.medics=[],this.guardians=[];for(let t=0;t<this.settings.population;t++){const t=new mt(700*Math.random()+50,500*Math.random()+50,this.settings.humanSpeed,this.settings.infectionTime,this.settings.detectionRadiusHumans);this.humans.push(t)}for(let t=0;t<this.settings.medicsPopulation;t++){const t=new gt(700*Math.random()+50,500*Math.random()+50,this.settings.medicSpeed,this.settings.healingPower,this.settings.detectionRadiusMedic,this.settings.infectionTimeMedic);this.medics.push(t)}for(let t=0;t<this.settings.guardiansPopulation;t++){const t=new pt(700*Math.random()+50,500*Math.random()+50,this.settings.guardianSpeed,this.settings.detectionRadiusGuardian,this.settings.attackRadiusGuardian,this.settings.attackPowerGuardian,this.settings.attackRateGuardian,this.settings.maxHealthGuardian);this.guardians.push(t)}for(let t=0;t<this.settings.zombiePopulation;t++)this.spawnZombie(50);this.lastTime=performance.now(),this.drawWorld()},spawnZombie(t){let i=0;const s=50;while(i<s){const s=700*Math.random()+50,e=500*Math.random()+50,n=this.humans.some(i=>i.isTooClose(s,e,t));if(!n){const t=new ut(700*Math.random()+50,500*Math.random()+50,this.settings.zombieSpeed,this.settings.infectionRadius,this.settings.detectionRadiusZombie,this.settings.maxHealthZombie,this.settings.attackPowerZombie,this.settings.attackRateZombie);return void this.zombies.push(t)}i++}const e=new ut(700*Math.random()+50,500*Math.random()+50,this.settings.zombieSpeed,this.settings.infectionRadius,this.settings.detectionRadiusZombie,this.settings.maxHealthZombie,this.settings.attackPowerZombie,this.settings.attackRateZombie);this.zombies.push(e)},drawWorld(){this.ctx.clearRect(0,0,800,600),this.humans.forEach(t=>{this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius,0,2*Math.PI),this.ctx.fill(),t.infectionProgress>0&&(this.ctx.strokeStyle="rgba(200, 0, 0, 0.7)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius+3,-Math.PI/2,-Math.PI/2+2*Math.PI*t.infectionProgress/100),this.ctx.stroke())}),this.medics.forEach(t=>{if(this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius,0,2*Math.PI),this.ctx.fill(),t.infectionProgress>0&&(this.ctx.strokeStyle="rgba(200, 0, 0, 0.7)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius+3,-Math.PI/2,-Math.PI/2+2*Math.PI*t.infectionProgress/100),this.ctx.stroke()),t.isHealing){const i=2*Math.sin(Date.now()/300);this.ctx.strokeStyle="rgba(100, 255, 180, 0.8)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius+3+i,0,2*Math.PI),this.ctx.stroke()}}),this.guardians.forEach(t=>{if(this.ctx.save(),this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="hsla(200, 30%, 80%, 0.8)",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius+1,0,2*Math.PI),this.ctx.stroke(),this.ctx.fillStyle="rgba(80, 60, 160, 0.08)",this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.attackRadius,0,2*Math.PI),this.ctx.fill(),t.health<t.maxHealth){const i=20,s=3,e=t.x-i/2,n=t.y-t.radius-5;this.ctx.fillStyle="rgba(0,0,0,0.5)",this.ctx.fillRect(e,n,i,s);const a=t.health/t.maxHealth;this.ctx.fillStyle=a>.6?"#2ecc71":a>.3?"#f39c12":"#e74c3c",this.ctx.fillRect(e,n,i*a,s),this.ctx.restore()}}),this.zombies.forEach(t=>{if(this.ctx.save(),this.ctx.fillStyle=t.color,this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.radius,0,2*Math.PI),this.ctx.fill(),t.health<t.maxHealth){const i=20,s=3,e=t.x-i/2,n=t.y-t.radius-5;this.ctx.fillStyle="rgba(0,0,0,0.5)",this.ctx.fillRect(e,n,i,s);const a=t.health/t.maxHealth;this.ctx.fillStyle=a>.6?"#2ecc71":a>.3?"#f39c12":"#e74c3c",this.ctx.fillRect(e,n,i*a,s)}this.ctx.fillStyle="rgba(139, 0, 0, 0.1)",this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.infectionRadius,0,2*Math.PI),this.ctx.fill(),this.ctx.restore()}),this.updateStats()},saveSettings(){this.tempSettings=JSON.parse(JSON.stringify(this.settings)),this.showSettings=!1,this.initWorld()},cancelSettings(){this.tempSettings&&(this.settings=JSON.parse(JSON.stringify(this.tempSettings)),this.$nextTick(()=>{this.$forceUpdate()})),this.showSettings=!0},resetSettings(){this.settings=JSON.parse(JSON.stringify(this.defaultSettings)),this.$nextTick(()=>{this.$forceUpdate(),this.initWorld()})},startSim(){this.simulationStarted?this.isPaused&&(this.pauseTime+=performance.now()-this.lastPauseTime,this.isPaused=!1):(this.startTime=performance.now(),this.pauseTime=0,this.elapsedTime=0,this.simulationEnd=!1,this.simulationStarted=!0),this.lastTime=performance.now(),this.animationId=requestAnimationFrame(this.update)},stopSim(){cancelAnimationFrame(this.animationId),this.lastPauseTime=performance.now()},resetSim(){this.stopSim(),this.humans=[],this.zombies=[],this.medics=[],this.guardians=[],this.startTime=0,this.pauseTime=0,this.lastPauseTime=0,this.elapsedTime=0,this.simulationEnd=!1,this.simulationStarted=!1,this.isPaused=!1,this.isRunning=!1,this.stats={healthy:0,infected:0,zombies:0,medics:0,guardians:0,time:"00:00"},this.showSettings=!0,this.initWorld()},update(t){if(!this.isRunning)return;if(this.frameSkip=(this.frameSkip+1)%3,0===this.frameSkip)return void(this.animationId=requestAnimationFrame(this.update));const i=t-this.lastTime;if(this.lastTime=t,this.humans.forEach(t=>t.move(this.zombies,this.medics)),this.zombies.forEach(t=>t.move(this.humans,this.medics,this.guardians)),this.medics.forEach(t=>t.move(this.humans,this.zombies,this.medics)),this.guardians.forEach(t=>t.move(this.zombies)),this.humans.forEach(t=>{this.zombies.forEach(i=>{const s=Math.hypot(i.x-t.x,i.y-t.y);s<i.infectionRadius&&0===t.infectionProgress&&(t.infectionProgress=.1)}),t.infectionProgress>0&&t.updateInfection(i)}),this.medics.forEach(t=>{this.zombies.forEach(i=>{const s=Math.hypot(i.x-t.x,i.y-t.y);s<i.infectionRadius&&0===t.infectionProgress&&(t.infectionProgress=.1)}),t.infectionProgress>0&&t.updateInfection(i)}),this.medics=this.medics.filter(t=>{if(t.infectionProgress>=100){const i=new ut(t.x,t.y,this.settings.zombieSpeed,this.settings.infectionRadius);return this.zombies.push(i),!1}return!0}),this.humans=this.humans.filter(t=>{if(t.infectionProgress>=100){const i=new ut(t.x,t.y,this.settings.zombieSpeed,this.settings.infectionRadius);return this.zombies.push(i),!1}return!0}),this.zombies=this.zombies.filter(t=>!(t.health<=0)),this.guardians=this.guardians.filter(t=>!(t.health<=0)),this.updateStats(),this.drawWorld(),!((this.humans.length>0||this.medics.length>0)&&this.zombies.length>0))return this.simulationEnd=!0,void(this.isRunning=!1);this.animationId=requestAnimationFrame(this.update)},updateStats(){this.simulationStarted&&!this.isPaused&&(this.elapsedTime=performance.now()-this.startTime-this.pauseTime),this.stats={healthy:this.humans.filter(t=>0===t.infectionProgress).length,infected:this.humans.filter(t=>t.infectionProgress>0).length+this.medics.filter(t=>t.infectionProgress>0).length,zombies:this.zombies.length,medics:this.medics.filter(t=>0===t.infectionProgress).length,guardians:this.guardians.filter(t=>t.health>0).length,time:`${Math.floor(Math.floor(this.elapsedTime/1e3)/60).toString().padStart(2,"0")}:${(Math.floor(this.elapsedTime/1e3)%60).toString().padStart(2,"0")}`}},showEndMessage(t){alert(t)},beforeDestroy(){cancelAnimationFrame(this.animationId)}}},kt=s(1241);const bt=(0,kt.A)(ft,[["render",dt]]);var xt=bt;(0,e.Ef)(xt).mount("#app")}},i={};function s(e){var n=i[e];if(void 0!==n)return n.exports;var a=i[e]={exports:{}};return t[e].call(a.exports,a,a.exports,s),a.exports}s.m=t,function(){var t=[];s.O=function(i,e,n,a){if(!e){var o=1/0;for(c=0;c<t.length;c++){e=t[c][0],n=t[c][1],a=t[c][2];for(var h=!0,r=0;r<e.length;r++)(!1&a||o>=a)&&Object.keys(s.O).every(function(t){return s.O[t](e[r])})?e.splice(r--,1):(h=!1,a<o&&(o=a));if(h){t.splice(c--,1);var l=n();void 0!==l&&(i=l)}}return i}a=a||0;for(var c=t.length;c>0&&t[c-1][2]>a;c--)t[c]=t[c-1];t[c]=[e,n,a]}}(),function(){s.n=function(t){var i=t&&t.__esModule?function(){return t["default"]}:function(){return t};return s.d(i,{a:i}),i}}(),function(){s.d=function(t,i){for(var e in i)s.o(i,e)&&!s.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:i[e]})}}(),function(){s.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)}}(),function(){var t={524:0};s.O.j=function(i){return 0===t[i]};var i=function(i,e){var n,a,o=e[0],h=e[1],r=e[2],l=0;if(o.some(function(i){return 0!==t[i]})){for(n in h)s.o(h,n)&&(s.m[n]=h[n]);if(r)var c=r(s)}for(i&&i(e);l<o.length;l++)a=o[l],s.o(t,a)&&t[a]&&t[a][0](),t[a]=0;return s.O(c)},e=self["webpackChunkzombie_app"]=self["webpackChunkzombie_app"]||[];e.forEach(i.bind(null,0)),e.push=i.bind(null,e.push.bind(e))}();var e=s.O(void 0,[504],function(){return s(985)});e=s.O(e)})();
//# sourceMappingURL=app.e1600993.js.map